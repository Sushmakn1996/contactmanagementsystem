package com.te.contactsystem.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.te.contactsystem.dto.UserDto;
import com.te.contactsystem.entity.User;
import com.te.contactsystem.exception.UserIdNotExistException;
import com.te.contactsystem.repository.UserRepository;

@Service
public class UserServiceImpl implements UserService {
	
	@Autowired
	private UserRepository repository;

	@Override
	public UserDto addUser(UserDto userDto) {
		User user = new User();
		BeanUtils.copyProperties(userDto, user);
		User save = repository.save(user);
		BeanUtils.copyProperties(save, userDto);
		return userDto;
	}

	@Override
	public User searchUserByFirstName(String firstName) {

		Optional<User> findByFirstName = repository.findByFirstName(firstName);
		if(!findByFirstName.isEmpty()) {
			User user = findByFirstName.get();
			return user;
		}
		return null;
	

	}

	@Override
	public UserDto updateUser(UserDto userDto) {
		User user = repository.findById(userDto.getUserId()).orElseThrow(
				() -> new UserIdNotExistException("User is not present with this Id: " + userDto.getUserId()));
		BeanUtils.copyProperties(userDto, user);
		User save = repository.save(user);
		BeanUtils.copyProperties(save, userDto);
		return userDto;

	}

	@Override
	public Boolean deleteUser(Long userId) {
		boolean isDeleted = false;
		repository.findById(userId)
				.orElseThrow(() -> new UserIdNotExistException("User is not present with this Id: " + userId));
		repository.deleteById(userId);
		isDeleted = true;
		return isDeleted;

	}

	@Override
	public List<UserDto> getAllUserContactDetails() {
		List<User> findAll = repository.findAll();
		List<UserDto> list = new ArrayList<>();
		findAll.forEach(i -> {
			UserDto userDto = new UserDto();
			BeanUtils.copyProperties(i, userDto);
			list.add(userDto);
		});
		return list;

	}

}
